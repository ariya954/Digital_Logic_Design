// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "06/27/2021 19:53:40"

// 
// Device: Altera EP4CE6E22C8L Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Sequential_multiplier (
	start_multplication,
	a,
	b,
	w,
	done_multplication);
input 	start_multplication;
input 	[11:0] a;
input 	[11:0] b;
output 	[23:0] w;
output 	[23:0] done_multplication;

// Design Ports Information
// w[0]	=>  Location: PIN_80,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[1]	=>  Location: PIN_46,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[2]	=>  Location: PIN_55,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[3]	=>  Location: PIN_125,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[4]	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[5]	=>  Location: PIN_66,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[6]	=>  Location: PIN_51,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[7]	=>  Location: PIN_76,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[8]	=>  Location: PIN_85,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[9]	=>  Location: PIN_132,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[10]	=>  Location: PIN_69,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[11]	=>  Location: PIN_138,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[12]	=>  Location: PIN_71,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[13]	=>  Location: PIN_67,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[14]	=>  Location: PIN_50,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[15]	=>  Location: PIN_75,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[16]	=>  Location: PIN_53,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[17]	=>  Location: PIN_126,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[18]	=>  Location: PIN_52,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[19]	=>  Location: PIN_34,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[20]	=>  Location: PIN_65,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[21]	=>  Location: PIN_137,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[22]	=>  Location: PIN_59,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w[23]	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[0]	=>  Location: PIN_110,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[1]	=>  Location: PIN_112,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[2]	=>  Location: PIN_39,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[3]	=>  Location: PIN_106,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[4]	=>  Location: PIN_141,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[5]	=>  Location: PIN_111,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[6]	=>  Location: PIN_70,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[7]	=>  Location: PIN_136,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[8]	=>  Location: PIN_100,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[9]	=>  Location: PIN_7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[10]	=>  Location: PIN_1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[11]	=>  Location: PIN_142,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[12]	=>  Location: PIN_120,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[13]	=>  Location: PIN_43,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[14]	=>  Location: PIN_103,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[15]	=>  Location: PIN_10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[16]	=>  Location: PIN_144,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[17]	=>  Location: PIN_115,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[18]	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[19]	=>  Location: PIN_84,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[20]	=>  Location: PIN_73,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[21]	=>  Location: PIN_119,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[22]	=>  Location: PIN_11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// done_multplication[23]	=>  Location: PIN_99,	 I/O Standard: 2.5 V,	 Current Strength: Default
// start_multplication	=>  Location: PIN_23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[0]	=>  Location: PIN_124,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[1]	=>  Location: PIN_87,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[2]	=>  Location: PIN_60,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[3]	=>  Location: PIN_129,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[4]	=>  Location: PIN_72,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[5]	=>  Location: PIN_113,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[6]	=>  Location: PIN_133,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[7]	=>  Location: PIN_68,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[8]	=>  Location: PIN_64,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[9]	=>  Location: PIN_42,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[10]	=>  Location: PIN_44,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[11]	=>  Location: PIN_49,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[0]	=>  Location: PIN_86,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[1]	=>  Location: PIN_58,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[2]	=>  Location: PIN_105,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[3]	=>  Location: PIN_128,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[4]	=>  Location: PIN_121,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[5]	=>  Location: PIN_98,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[6]	=>  Location: PIN_77,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[7]	=>  Location: PIN_114,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[8]	=>  Location: PIN_127,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[9]	=>  Location: PIN_54,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[10]	=>  Location: PIN_83,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b[11]	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("Sequential_multiplier_v.sdo");
// synopsys translate_on

wire \Mult0|auto_generated|mac_out2~0 ;
wire \Mult0|auto_generated|mac_out2~1 ;
wire \Mult0|auto_generated|mac_out2~2 ;
wire \Mult0|auto_generated|mac_out2~3 ;
wire \Mult0|auto_generated|mac_out2~4 ;
wire \Mult0|auto_generated|mac_out2~5 ;
wire \Mult0|auto_generated|mac_out2~6 ;
wire \Mult0|auto_generated|mac_out2~7 ;
wire \Mult0|auto_generated|mac_out2~8 ;
wire \Mult0|auto_generated|mac_out2~9 ;
wire \Mult0|auto_generated|mac_out2~10 ;
wire \Mult0|auto_generated|mac_out2~11 ;
wire \w[0]~output_o ;
wire \w[1]~output_o ;
wire \w[2]~output_o ;
wire \w[3]~output_o ;
wire \w[4]~output_o ;
wire \w[5]~output_o ;
wire \w[6]~output_o ;
wire \w[7]~output_o ;
wire \w[8]~output_o ;
wire \w[9]~output_o ;
wire \w[10]~output_o ;
wire \w[11]~output_o ;
wire \w[12]~output_o ;
wire \w[13]~output_o ;
wire \w[14]~output_o ;
wire \w[15]~output_o ;
wire \w[16]~output_o ;
wire \w[17]~output_o ;
wire \w[18]~output_o ;
wire \w[19]~output_o ;
wire \w[20]~output_o ;
wire \w[21]~output_o ;
wire \w[22]~output_o ;
wire \w[23]~output_o ;
wire \done_multplication[0]~output_o ;
wire \done_multplication[1]~output_o ;
wire \done_multplication[2]~output_o ;
wire \done_multplication[3]~output_o ;
wire \done_multplication[4]~output_o ;
wire \done_multplication[5]~output_o ;
wire \done_multplication[6]~output_o ;
wire \done_multplication[7]~output_o ;
wire \done_multplication[8]~output_o ;
wire \done_multplication[9]~output_o ;
wire \done_multplication[10]~output_o ;
wire \done_multplication[11]~output_o ;
wire \done_multplication[12]~output_o ;
wire \done_multplication[13]~output_o ;
wire \done_multplication[14]~output_o ;
wire \done_multplication[15]~output_o ;
wire \done_multplication[16]~output_o ;
wire \done_multplication[17]~output_o ;
wire \done_multplication[18]~output_o ;
wire \done_multplication[19]~output_o ;
wire \done_multplication[20]~output_o ;
wire \done_multplication[21]~output_o ;
wire \done_multplication[22]~output_o ;
wire \done_multplication[23]~output_o ;
wire \start_multplication~input_o ;
wire \start_multplication~inputclkctrl_outclk ;
wire \a[0]~input_o ;
wire \a[1]~input_o ;
wire \a[2]~input_o ;
wire \a[3]~input_o ;
wire \a[4]~input_o ;
wire \a[5]~input_o ;
wire \a[6]~input_o ;
wire \a[7]~input_o ;
wire \a[8]~input_o ;
wire \a[9]~input_o ;
wire \a[10]~input_o ;
wire \a[11]~input_o ;
wire \b[0]~input_o ;
wire \b[1]~input_o ;
wire \b[2]~input_o ;
wire \b[3]~input_o ;
wire \b[4]~input_o ;
wire \b[5]~input_o ;
wire \b[6]~input_o ;
wire \b[7]~input_o ;
wire \b[8]~input_o ;
wire \b[9]~input_o ;
wire \b[10]~input_o ;
wire \b[11]~input_o ;
wire \Mult0|auto_generated|mac_mult1~dataout ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT1 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT2 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT3 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT4 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT5 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT6 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT7 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT8 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT9 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT10 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT11 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT12 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT13 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT14 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT15 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT16 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT17 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT18 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT19 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT20 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT21 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT22 ;
wire \Mult0|auto_generated|mac_mult1~DATAOUT23 ;
wire \Mult0|auto_generated|mac_mult1~0 ;
wire \Mult0|auto_generated|mac_mult1~1 ;
wire \Mult0|auto_generated|mac_mult1~2 ;
wire \Mult0|auto_generated|mac_mult1~3 ;
wire \Mult0|auto_generated|mac_mult1~4 ;
wire \Mult0|auto_generated|mac_mult1~5 ;
wire \Mult0|auto_generated|mac_mult1~6 ;
wire \Mult0|auto_generated|mac_mult1~7 ;
wire \Mult0|auto_generated|mac_mult1~8 ;
wire \Mult0|auto_generated|mac_mult1~9 ;
wire \Mult0|auto_generated|mac_mult1~10 ;
wire \Mult0|auto_generated|mac_mult1~11 ;
wire \w[0]~reg0 ;
wire \w[1]~reg0 ;
wire \w[2]~reg0 ;
wire \w[3]~reg0 ;
wire \w[4]~reg0 ;
wire \w[5]~reg0 ;
wire \w[6]~reg0 ;
wire \w[7]~reg0 ;
wire \w[8]~reg0 ;
wire \w[9]~reg0 ;
wire \w[10]~reg0 ;
wire \w[11]~reg0 ;
wire \w[12]~reg0 ;
wire \w[13]~reg0 ;
wire \w[14]~reg0 ;
wire \w[15]~reg0 ;
wire \w[16]~reg0 ;
wire \w[17]~reg0 ;
wire \w[18]~reg0 ;
wire \w[19]~reg0 ;
wire \w[20]~reg0 ;
wire \w[21]~reg0 ;
wire \w[22]~reg0 ;
wire \w[23]~reg0 ;

wire [35:0] \Mult0|auto_generated|mac_out2_DATAOUT_bus ;
wire [35:0] \Mult0|auto_generated|mac_mult1_DATAOUT_bus ;

assign \Mult0|auto_generated|mac_out2~0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [0];
assign \Mult0|auto_generated|mac_out2~1  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [1];
assign \Mult0|auto_generated|mac_out2~2  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [2];
assign \Mult0|auto_generated|mac_out2~3  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [3];
assign \Mult0|auto_generated|mac_out2~4  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [4];
assign \Mult0|auto_generated|mac_out2~5  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [5];
assign \Mult0|auto_generated|mac_out2~6  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [6];
assign \Mult0|auto_generated|mac_out2~7  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [7];
assign \Mult0|auto_generated|mac_out2~8  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [8];
assign \Mult0|auto_generated|mac_out2~9  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [9];
assign \Mult0|auto_generated|mac_out2~10  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [10];
assign \Mult0|auto_generated|mac_out2~11  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [11];
assign \w[0]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [12];
assign \w[1]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [13];
assign \w[2]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [14];
assign \w[3]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [15];
assign \w[4]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [16];
assign \w[5]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [17];
assign \w[6]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [18];
assign \w[7]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [19];
assign \w[8]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [20];
assign \w[9]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [21];
assign \w[10]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [22];
assign \w[11]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [23];
assign \w[12]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [24];
assign \w[13]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [25];
assign \w[14]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [26];
assign \w[15]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [27];
assign \w[16]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [28];
assign \w[17]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [29];
assign \w[18]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [30];
assign \w[19]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [31];
assign \w[20]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [32];
assign \w[21]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [33];
assign \w[22]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [34];
assign \w[23]~reg0  = \Mult0|auto_generated|mac_out2_DATAOUT_bus [35];

assign \Mult0|auto_generated|mac_mult1~0  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [0];
assign \Mult0|auto_generated|mac_mult1~1  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [1];
assign \Mult0|auto_generated|mac_mult1~2  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [2];
assign \Mult0|auto_generated|mac_mult1~3  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [3];
assign \Mult0|auto_generated|mac_mult1~4  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [4];
assign \Mult0|auto_generated|mac_mult1~5  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [5];
assign \Mult0|auto_generated|mac_mult1~6  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [6];
assign \Mult0|auto_generated|mac_mult1~7  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [7];
assign \Mult0|auto_generated|mac_mult1~8  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [8];
assign \Mult0|auto_generated|mac_mult1~9  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [9];
assign \Mult0|auto_generated|mac_mult1~10  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [10];
assign \Mult0|auto_generated|mac_mult1~11  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [11];
assign \Mult0|auto_generated|mac_mult1~dataout  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [12];
assign \Mult0|auto_generated|mac_mult1~DATAOUT1  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [13];
assign \Mult0|auto_generated|mac_mult1~DATAOUT2  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [14];
assign \Mult0|auto_generated|mac_mult1~DATAOUT3  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [15];
assign \Mult0|auto_generated|mac_mult1~DATAOUT4  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [16];
assign \Mult0|auto_generated|mac_mult1~DATAOUT5  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [17];
assign \Mult0|auto_generated|mac_mult1~DATAOUT6  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [18];
assign \Mult0|auto_generated|mac_mult1~DATAOUT7  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [19];
assign \Mult0|auto_generated|mac_mult1~DATAOUT8  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [20];
assign \Mult0|auto_generated|mac_mult1~DATAOUT9  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [21];
assign \Mult0|auto_generated|mac_mult1~DATAOUT10  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [22];
assign \Mult0|auto_generated|mac_mult1~DATAOUT11  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [23];
assign \Mult0|auto_generated|mac_mult1~DATAOUT12  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [24];
assign \Mult0|auto_generated|mac_mult1~DATAOUT13  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [25];
assign \Mult0|auto_generated|mac_mult1~DATAOUT14  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [26];
assign \Mult0|auto_generated|mac_mult1~DATAOUT15  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [27];
assign \Mult0|auto_generated|mac_mult1~DATAOUT16  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [28];
assign \Mult0|auto_generated|mac_mult1~DATAOUT17  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [29];
assign \Mult0|auto_generated|mac_mult1~DATAOUT18  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [30];
assign \Mult0|auto_generated|mac_mult1~DATAOUT19  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [31];
assign \Mult0|auto_generated|mac_mult1~DATAOUT20  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [32];
assign \Mult0|auto_generated|mac_mult1~DATAOUT21  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [33];
assign \Mult0|auto_generated|mac_mult1~DATAOUT22  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [34];
assign \Mult0|auto_generated|mac_mult1~DATAOUT23  = \Mult0|auto_generated|mac_mult1_DATAOUT_bus [35];

hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X34_Y7_N9
cycloneive_io_obuf \w[0]~output (
	.i(\w[0]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[0]~output .bus_hold = "false";
defparam \w[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N2
cycloneive_io_obuf \w[1]~output (
	.i(\w[1]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[1]~output .bus_hold = "false";
defparam \w[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X18_Y0_N16
cycloneive_io_obuf \w[2]~output (
	.i(\w[2]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[2]~output .bus_hold = "false";
defparam \w[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X18_Y24_N23
cycloneive_io_obuf \w[3]~output (
	.i(\w[3]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[3]~output .bus_hold = "false";
defparam \w[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N23
cycloneive_io_obuf \w[4]~output (
	.i(\w[4]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[4]~output .bus_hold = "false";
defparam \w[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X28_Y0_N2
cycloneive_io_obuf \w[5]~output (
	.i(\w[5]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[5]~output .bus_hold = "false";
defparam \w[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X16_Y0_N23
cycloneive_io_obuf \w[6]~output (
	.i(\w[6]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[6]~output .bus_hold = "false";
defparam \w[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y4_N23
cycloneive_io_obuf \w[7]~output (
	.i(\w[7]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[7]~output .bus_hold = "false";
defparam \w[7]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y9_N9
cycloneive_io_obuf \w[8]~output (
	.i(\w[8]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[8]~output .bus_hold = "false";
defparam \w[8]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X13_Y24_N16
cycloneive_io_obuf \w[9]~output (
	.i(\w[9]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[9]~output .bus_hold = "false";
defparam \w[9]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X30_Y0_N2
cycloneive_io_obuf \w[10]~output (
	.i(\w[10]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[10]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[10]~output .bus_hold = "false";
defparam \w[10]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y24_N9
cycloneive_io_obuf \w[11]~output (
	.i(\w[11]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[11]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[11]~output .bus_hold = "false";
defparam \w[11]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X32_Y0_N16
cycloneive_io_obuf \w[12]~output (
	.i(\w[12]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[12]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[12]~output .bus_hold = "false";
defparam \w[12]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X30_Y0_N23
cycloneive_io_obuf \w[13]~output (
	.i(\w[13]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[13]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[13]~output .bus_hold = "false";
defparam \w[13]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X13_Y0_N2
cycloneive_io_obuf \w[14]~output (
	.i(\w[14]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[14]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[14]~output .bus_hold = "false";
defparam \w[14]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y3_N23
cycloneive_io_obuf \w[15]~output (
	.i(\w[15]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[15]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[15]~output .bus_hold = "false";
defparam \w[15]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X16_Y0_N2
cycloneive_io_obuf \w[16]~output (
	.i(\w[16]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[16]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[16]~output .bus_hold = "false";
defparam \w[16]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X16_Y24_N2
cycloneive_io_obuf \w[17]~output (
	.i(\w[17]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[17]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[17]~output .bus_hold = "false";
defparam \w[17]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X16_Y0_N9
cycloneive_io_obuf \w[18]~output (
	.i(\w[18]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[18]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[18]~output .bus_hold = "false";
defparam \w[18]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y5_N16
cycloneive_io_obuf \w[19]~output (
	.i(\w[19]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[19]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[19]~output .bus_hold = "false";
defparam \w[19]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X28_Y0_N23
cycloneive_io_obuf \w[20]~output (
	.i(\w[20]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[20]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[20]~output .bus_hold = "false";
defparam \w[20]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y24_N2
cycloneive_io_obuf \w[21]~output (
	.i(\w[21]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[21]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[21]~output .bus_hold = "false";
defparam \w[21]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X23_Y0_N16
cycloneive_io_obuf \w[22]~output (
	.i(\w[22]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[22]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[22]~output .bus_hold = "false";
defparam \w[22]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y7_N2
cycloneive_io_obuf \w[23]~output (
	.i(\w[23]~reg0 ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w[23]~output_o ),
	.obar());
// synopsys translate_off
defparam \w[23]~output .bus_hold = "false";
defparam \w[23]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X30_Y24_N2
cycloneive_io_obuf \done_multplication[0]~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[0]~output .bus_hold = "false";
defparam \done_multplication[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X28_Y24_N2
cycloneive_io_obuf \done_multplication[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[1]~output .bus_hold = "false";
defparam \done_multplication[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N16
cycloneive_io_obuf \done_multplication[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[2]~output .bus_hold = "false";
defparam \done_multplication[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y20_N9
cycloneive_io_obuf \done_multplication[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[3]~output .bus_hold = "false";
defparam \done_multplication[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y24_N9
cycloneive_io_obuf \done_multplication[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[4]~output .bus_hold = "false";
defparam \done_multplication[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X30_Y24_N23
cycloneive_io_obuf \done_multplication[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[5]~output .bus_hold = "false";
defparam \done_multplication[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X32_Y0_N23
cycloneive_io_obuf \done_multplication[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[6]~output .bus_hold = "false";
defparam \done_multplication[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X9_Y24_N9
cycloneive_io_obuf \done_multplication[7]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[7]~output .bus_hold = "false";
defparam \done_multplication[7]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y17_N2
cycloneive_io_obuf \done_multplication[8]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[8]~output .bus_hold = "false";
defparam \done_multplication[8]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y21_N9
cycloneive_io_obuf \done_multplication[9]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[9]~output .bus_hold = "false";
defparam \done_multplication[9]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y23_N2
cycloneive_io_obuf \done_multplication[10]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[10]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[10]~output .bus_hold = "false";
defparam \done_multplication[10]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X3_Y24_N23
cycloneive_io_obuf \done_multplication[11]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[11]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[11]~output .bus_hold = "false";
defparam \done_multplication[11]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X23_Y24_N9
cycloneive_io_obuf \done_multplication[12]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[12]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[12]~output .bus_hold = "false";
defparam \done_multplication[12]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N23
cycloneive_io_obuf \done_multplication[13]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[13]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[13]~output .bus_hold = "false";
defparam \done_multplication[13]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y18_N16
cycloneive_io_obuf \done_multplication[14]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[14]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[14]~output .bus_hold = "false";
defparam \done_multplication[14]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y18_N16
cycloneive_io_obuf \done_multplication[15]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[15]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[15]~output .bus_hold = "false";
defparam \done_multplication[15]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y24_N9
cycloneive_io_obuf \done_multplication[16]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[16]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[16]~output .bus_hold = "false";
defparam \done_multplication[16]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X28_Y24_N23
cycloneive_io_obuf \done_multplication[17]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[17]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[17]~output .bus_hold = "false";
defparam \done_multplication[17]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y9_N9
cycloneive_io_obuf \done_multplication[18]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[18]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[18]~output .bus_hold = "false";
defparam \done_multplication[18]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y9_N16
cycloneive_io_obuf \done_multplication[19]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[19]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[19]~output .bus_hold = "false";
defparam \done_multplication[19]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y2_N23
cycloneive_io_obuf \done_multplication[20]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[20]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[20]~output .bus_hold = "false";
defparam \done_multplication[20]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X23_Y24_N2
cycloneive_io_obuf \done_multplication[21]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[21]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[21]~output .bus_hold = "false";
defparam \done_multplication[21]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y18_N23
cycloneive_io_obuf \done_multplication[22]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[22]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[22]~output .bus_hold = "false";
defparam \done_multplication[22]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y17_N16
cycloneive_io_obuf \done_multplication[23]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\done_multplication[23]~output_o ),
	.obar());
// synopsys translate_off
defparam \done_multplication[23]~output .bus_hold = "false";
defparam \done_multplication[23]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \start_multplication~input (
	.i(start_multplication),
	.ibar(gnd),
	.o(\start_multplication~input_o ));
// synopsys translate_off
defparam \start_multplication~input .bus_hold = "false";
defparam \start_multplication~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \start_multplication~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\start_multplication~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\start_multplication~inputclkctrl_outclk ));
// synopsys translate_off
defparam \start_multplication~inputclkctrl .clock_type = "global clock";
defparam \start_multplication~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X18_Y24_N15
cycloneive_io_ibuf \a[0]~input (
	.i(a[0]),
	.ibar(gnd),
	.o(\a[0]~input_o ));
// synopsys translate_off
defparam \a[0]~input .bus_hold = "false";
defparam \a[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y10_N8
cycloneive_io_ibuf \a[1]~input (
	.i(a[1]),
	.ibar(gnd),
	.o(\a[1]~input_o ));
// synopsys translate_off
defparam \a[1]~input .bus_hold = "false";
defparam \a[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X23_Y0_N8
cycloneive_io_ibuf \a[2]~input (
	.i(a[2]),
	.ibar(gnd),
	.o(\a[2]~input_o ));
// synopsys translate_off
defparam \a[2]~input .bus_hold = "false";
defparam \a[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X16_Y24_N22
cycloneive_io_ibuf \a[3]~input (
	.i(a[3]),
	.ibar(gnd),
	.o(\a[3]~input_o ));
// synopsys translate_off
defparam \a[3]~input .bus_hold = "false";
defparam \a[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X32_Y0_N8
cycloneive_io_ibuf \a[4]~input (
	.i(a[4]),
	.ibar(gnd),
	.o(\a[4]~input_o ));
// synopsys translate_off
defparam \a[4]~input .bus_hold = "false";
defparam \a[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X28_Y24_N8
cycloneive_io_ibuf \a[5]~input (
	.i(a[5]),
	.ibar(gnd),
	.o(\a[5]~input_o ));
// synopsys translate_off
defparam \a[5]~input .bus_hold = "false";
defparam \a[5]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X13_Y24_N22
cycloneive_io_ibuf \a[6]~input (
	.i(a[6]),
	.ibar(gnd),
	.o(\a[6]~input_o ));
// synopsys translate_off
defparam \a[6]~input .bus_hold = "false";
defparam \a[6]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X30_Y0_N8
cycloneive_io_ibuf \a[7]~input (
	.i(a[7]),
	.ibar(gnd),
	.o(\a[7]~input_o ));
// synopsys translate_off
defparam \a[7]~input .bus_hold = "false";
defparam \a[7]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X25_Y0_N1
cycloneive_io_ibuf \a[8]~input (
	.i(a[8]),
	.ibar(gnd),
	.o(\a[8]~input_o ));
// synopsys translate_off
defparam \a[8]~input .bus_hold = "false";
defparam \a[8]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X3_Y0_N1
cycloneive_io_ibuf \a[9]~input (
	.i(a[9]),
	.ibar(gnd),
	.o(\a[9]~input_o ));
// synopsys translate_off
defparam \a[9]~input .bus_hold = "false";
defparam \a[9]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X5_Y0_N15
cycloneive_io_ibuf \a[10]~input (
	.i(a[10]),
	.ibar(gnd),
	.o(\a[10]~input_o ));
// synopsys translate_off
defparam \a[10]~input .bus_hold = "false";
defparam \a[10]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X13_Y0_N15
cycloneive_io_ibuf \a[11]~input (
	.i(a[11]),
	.ibar(gnd),
	.o(\a[11]~input_o ));
// synopsys translate_off
defparam \a[11]~input .bus_hold = "false";
defparam \a[11]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y9_N1
cycloneive_io_ibuf \b[0]~input (
	.i(b[0]),
	.ibar(gnd),
	.o(\b[0]~input_o ));
// synopsys translate_off
defparam \b[0]~input .bus_hold = "false";
defparam \b[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X21_Y0_N8
cycloneive_io_ibuf \b[1]~input (
	.i(b[1]),
	.ibar(gnd),
	.o(\b[1]~input_o ));
// synopsys translate_off
defparam \b[1]~input .bus_hold = "false";
defparam \b[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y19_N15
cycloneive_io_ibuf \b[2]~input (
	.i(b[2]),
	.ibar(gnd),
	.o(\b[2]~input_o ));
// synopsys translate_off
defparam \b[2]~input .bus_hold = "false";
defparam \b[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X16_Y24_N15
cycloneive_io_ibuf \b[3]~input (
	.i(b[3]),
	.ibar(gnd),
	.o(\b[3]~input_o ));
// synopsys translate_off
defparam \b[3]~input .bus_hold = "false";
defparam \b[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X23_Y24_N15
cycloneive_io_ibuf \b[4]~input (
	.i(b[4]),
	.ibar(gnd),
	.o(\b[4]~input_o ));
// synopsys translate_off
defparam \b[4]~input .bus_hold = "false";
defparam \b[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y17_N22
cycloneive_io_ibuf \b[5]~input (
	.i(b[5]),
	.ibar(gnd),
	.o(\b[5]~input_o ));
// synopsys translate_off
defparam \b[5]~input .bus_hold = "false";
defparam \b[5]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y4_N15
cycloneive_io_ibuf \b[6]~input (
	.i(b[6]),
	.ibar(gnd),
	.o(\b[6]~input_o ));
// synopsys translate_off
defparam \b[6]~input .bus_hold = "false";
defparam \b[6]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X28_Y24_N15
cycloneive_io_ibuf \b[7]~input (
	.i(b[7]),
	.ibar(gnd),
	.o(\b[7]~input_o ));
// synopsys translate_off
defparam \b[7]~input .bus_hold = "false";
defparam \b[7]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X16_Y24_N8
cycloneive_io_ibuf \b[8]~input (
	.i(b[8]),
	.ibar(gnd),
	.o(\b[8]~input_o ));
// synopsys translate_off
defparam \b[8]~input .bus_hold = "false";
defparam \b[8]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X18_Y0_N22
cycloneive_io_ibuf \b[9]~input (
	.i(b[9]),
	.ibar(gnd),
	.o(\b[9]~input_o ));
// synopsys translate_off
defparam \b[9]~input .bus_hold = "false";
defparam \b[9]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y9_N22
cycloneive_io_ibuf \b[10]~input (
	.i(b[10]),
	.ibar(gnd),
	.o(\b[10]~input_o ));
// synopsys translate_off
defparam \b[10]~input .bus_hold = "false";
defparam \b[10]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y8_N15
cycloneive_io_ibuf \b[11]~input (
	.i(b[11]),
	.ibar(gnd),
	.o(\b[11]~input_o ));
// synopsys translate_off
defparam \b[11]~input .bus_hold = "false";
defparam \b[11]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: DSPMULT_X20_Y4_N0
cycloneive_mac_mult \Mult0|auto_generated|mac_mult1 (
	.signa(gnd),
	.signb(gnd),
	.clk(gnd),
	.aclr(gnd),
	.ena(vcc),
	.dataa({\a[11]~input_o ,\a[10]~input_o ,\a[9]~input_o ,\a[8]~input_o ,\a[7]~input_o ,\a[6]~input_o ,\a[5]~input_o ,\a[4]~input_o ,\a[3]~input_o ,\a[2]~input_o ,\a[1]~input_o ,\a[0]~input_o ,gnd,gnd,gnd,gnd,gnd,gnd}),
	.datab({\b[11]~input_o ,\b[10]~input_o ,\b[9]~input_o ,\b[8]~input_o ,\b[7]~input_o ,\b[6]~input_o ,\b[5]~input_o ,\b[4]~input_o ,\b[3]~input_o ,\b[2]~input_o ,\b[1]~input_o ,\b[0]~input_o ,gnd,gnd,gnd,gnd,gnd,gnd}),
	.devclrn(devclrn),
	.devpor(devpor),
	.dataout(\Mult0|auto_generated|mac_mult1_DATAOUT_bus ));
// synopsys translate_off
defparam \Mult0|auto_generated|mac_mult1 .dataa_clock = "none";
defparam \Mult0|auto_generated|mac_mult1 .dataa_width = 18;
defparam \Mult0|auto_generated|mac_mult1 .datab_clock = "none";
defparam \Mult0|auto_generated|mac_mult1 .datab_width = 18;
defparam \Mult0|auto_generated|mac_mult1 .signa_clock = "none";
defparam \Mult0|auto_generated|mac_mult1 .signb_clock = "none";
// synopsys translate_on

// Location: DSPOUT_X20_Y4_N2
cycloneive_mac_out \Mult0|auto_generated|mac_out2 (
	.clk(\start_multplication~inputclkctrl_outclk ),
	.aclr(gnd),
	.ena(vcc),
	.dataa({\Mult0|auto_generated|mac_mult1~DATAOUT23 ,\Mult0|auto_generated|mac_mult1~DATAOUT22 ,\Mult0|auto_generated|mac_mult1~DATAOUT21 ,\Mult0|auto_generated|mac_mult1~DATAOUT20 ,\Mult0|auto_generated|mac_mult1~DATAOUT19 ,\Mult0|auto_generated|mac_mult1~DATAOUT18 ,
\Mult0|auto_generated|mac_mult1~DATAOUT17 ,\Mult0|auto_generated|mac_mult1~DATAOUT16 ,\Mult0|auto_generated|mac_mult1~DATAOUT15 ,\Mult0|auto_generated|mac_mult1~DATAOUT14 ,\Mult0|auto_generated|mac_mult1~DATAOUT13 ,\Mult0|auto_generated|mac_mult1~DATAOUT12 ,
\Mult0|auto_generated|mac_mult1~DATAOUT11 ,\Mult0|auto_generated|mac_mult1~DATAOUT10 ,\Mult0|auto_generated|mac_mult1~DATAOUT9 ,\Mult0|auto_generated|mac_mult1~DATAOUT8 ,\Mult0|auto_generated|mac_mult1~DATAOUT7 ,\Mult0|auto_generated|mac_mult1~DATAOUT6 ,
\Mult0|auto_generated|mac_mult1~DATAOUT5 ,\Mult0|auto_generated|mac_mult1~DATAOUT4 ,\Mult0|auto_generated|mac_mult1~DATAOUT3 ,\Mult0|auto_generated|mac_mult1~DATAOUT2 ,\Mult0|auto_generated|mac_mult1~DATAOUT1 ,\Mult0|auto_generated|mac_mult1~dataout ,
\Mult0|auto_generated|mac_mult1~11 ,\Mult0|auto_generated|mac_mult1~10 ,\Mult0|auto_generated|mac_mult1~9 ,\Mult0|auto_generated|mac_mult1~8 ,\Mult0|auto_generated|mac_mult1~7 ,\Mult0|auto_generated|mac_mult1~6 ,\Mult0|auto_generated|mac_mult1~5 ,
\Mult0|auto_generated|mac_mult1~4 ,\Mult0|auto_generated|mac_mult1~3 ,\Mult0|auto_generated|mac_mult1~2 ,\Mult0|auto_generated|mac_mult1~1 ,\Mult0|auto_generated|mac_mult1~0 }),
	.devclrn(devclrn),
	.devpor(devpor),
	.dataout(\Mult0|auto_generated|mac_out2_DATAOUT_bus ));
// synopsys translate_off
defparam \Mult0|auto_generated|mac_out2 .dataa_width = 36;
defparam \Mult0|auto_generated|mac_out2 .output_clock = "0";
// synopsys translate_on

assign w[0] = \w[0]~output_o ;

assign w[1] = \w[1]~output_o ;

assign w[2] = \w[2]~output_o ;

assign w[3] = \w[3]~output_o ;

assign w[4] = \w[4]~output_o ;

assign w[5] = \w[5]~output_o ;

assign w[6] = \w[6]~output_o ;

assign w[7] = \w[7]~output_o ;

assign w[8] = \w[8]~output_o ;

assign w[9] = \w[9]~output_o ;

assign w[10] = \w[10]~output_o ;

assign w[11] = \w[11]~output_o ;

assign w[12] = \w[12]~output_o ;

assign w[13] = \w[13]~output_o ;

assign w[14] = \w[14]~output_o ;

assign w[15] = \w[15]~output_o ;

assign w[16] = \w[16]~output_o ;

assign w[17] = \w[17]~output_o ;

assign w[18] = \w[18]~output_o ;

assign w[19] = \w[19]~output_o ;

assign w[20] = \w[20]~output_o ;

assign w[21] = \w[21]~output_o ;

assign w[22] = \w[22]~output_o ;

assign w[23] = \w[23]~output_o ;

assign done_multplication[0] = \done_multplication[0]~output_o ;

assign done_multplication[1] = \done_multplication[1]~output_o ;

assign done_multplication[2] = \done_multplication[2]~output_o ;

assign done_multplication[3] = \done_multplication[3]~output_o ;

assign done_multplication[4] = \done_multplication[4]~output_o ;

assign done_multplication[5] = \done_multplication[5]~output_o ;

assign done_multplication[6] = \done_multplication[6]~output_o ;

assign done_multplication[7] = \done_multplication[7]~output_o ;

assign done_multplication[8] = \done_multplication[8]~output_o ;

assign done_multplication[9] = \done_multplication[9]~output_o ;

assign done_multplication[10] = \done_multplication[10]~output_o ;

assign done_multplication[11] = \done_multplication[11]~output_o ;

assign done_multplication[12] = \done_multplication[12]~output_o ;

assign done_multplication[13] = \done_multplication[13]~output_o ;

assign done_multplication[14] = \done_multplication[14]~output_o ;

assign done_multplication[15] = \done_multplication[15]~output_o ;

assign done_multplication[16] = \done_multplication[16]~output_o ;

assign done_multplication[17] = \done_multplication[17]~output_o ;

assign done_multplication[18] = \done_multplication[18]~output_o ;

assign done_multplication[19] = \done_multplication[19]~output_o ;

assign done_multplication[20] = \done_multplication[20]~output_o ;

assign done_multplication[21] = \done_multplication[21]~output_o ;

assign done_multplication[22] = \done_multplication[22]~output_o ;

assign done_multplication[23] = \done_multplication[23]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_101,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
