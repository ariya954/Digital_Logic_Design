<?xml version="1.0" ?>
<ROOT>
  <HIDDEN_PARAMETERS>
    <PARAMETER NAME="m_tx_pcs_pma_data_rate" >
      <FORCE_VALUE REGEXP_SOURCE="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_TX_PCS_PMA_EFFECTIVE_DATARATE, m_device_part, m_tx_clk_div_type, 0, gxb_analog_power, CMU, UNUSED, CMU, UNUSED, m_protocol, UNUSED, UNUSED, UNUSED, UNUSED, m_deser_factor, m_tx_clkin_select, UNUSED, m_pcs_protocol, tx_use_double_data_mode, tx_datapath_low_latency_mode, m_hip_enable, UNUSED)" REGEXP_PATTERN="([0-9.]+) Mbps" REGEXP_SUBSTITUTION="$1" />
      <FORCE_RANGE MIN="600" MAX="2500" WHEN="mfam_family_cycloneiiigl" />
    </PARAMETER>
    <PARAMETER NAME="m_rx_pcs_pma_data_rate" >
      <FORCE_VALUE REGEXP_SOURCE="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_RX_PCS_PMA_EFFECTIVE_DATARATE, m_device_part, RX_CDR, gxb_analog_power, m_protocol, m_deser_factor, m_pcs_protocol, rx_use_double_data_mode, rx_datapath_low_latency_mode, m_hip_enable)" REGEXP_PATTERN="([0-9.]+) Mbps" REGEXP_SUBSTITUTION="$1" />
      <FORCE_RANGE MIN="600" MAX="2500" WHEN="mfam_family_cycloneiiigl" />
    </PARAMETER>
    <PARAMETER NAME="m_dprio_tx_pcs_pma_data_rate" >
      <FORCE_VALUE REGEXP_SOURCE="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_TX_PCS_PMA_EFFECTIVE_DATARATE, m_device_part, m_tx_clk_div_type, 0, gxb_analog_power, CMU, UNUSED, CMU, UNUSED, reconfig_protocol, UNUSED, UNUSED, UNUSED, UNUSED, m_deser_factor, m_tx_clkin_select, UNUSED, reconfig_protocol, tx_use_double_data_mode, tx_datapath_low_latency_mode, m_hip_enable, UNUSED)" REGEXP_PATTERN="([0-9.]+) Mbps" REGEXP_SUBSTITUTION="$1" />
    </PARAMETER>
    <PARAMETER NAME="m_dprio_rx_pcs_pma_data_rate" >
      <FORCE_VALUE REGEXP_SOURCE="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_RX_PCS_PMA_EFFECTIVE_DATARATE, m_device_part, RX_CDR, gxb_analog_power, reconfig_protocol, m_deser_factor, reconfig_protocol, rx_use_double_data_mode, rx_datapath_low_latency_mode, m_hip_enable)" REGEXP_PATTERN="([0-9.]+) Mbps" REGEXP_SUBSTITUTION="$1" />
    </PARAMETER>
  </HIDDEN_PARAMETERS>
  <MACROS> <!-- These macros are RBC calls -->
    <MACRO NAME="m_device_part" >
			<DEFINITION>
				db_rbc_tcl$get_typical_device_part(INTENDED_DEVICE_FAMILY, INTENDED_DEVICE_SPEED_GRADE, INTENDED_DEVICE_VARIANT, "PRODUCTION")
			</DEFINITION>
		</MACRO>	
		<MACRO NAME="m_preemp_tap1_rule1" >
			<DEFINITION>
				db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_POSTTAP1_SETTINGS_RULE_1, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, m_channel_type, protocol, effective_data_rate)
			</DEFINITION>
		</MACRO>
		<MACRO NAME="m_preemp_tap1_rule2" >
			<DEFINITION>
        db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_POSTTAP1_SETTINGS_RULE_2, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, m_channel_type, protocol, effective_data_rate)
      </DEFINITION>
    </MACRO>
    <MACRO NAME="m_preemp_tap1_rule3" >
      <DEFINITION>
        db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_POSTTAP1_SETTINGS_RULE_3, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, m_channel_type, protocol, effective_data_rate)
      </DEFINITION>
		</MACRO>
		<MACRO NAME="m_preemp_tap0_rule1" >
			<DEFINITION>
				db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_PRETAP_SETTINGS_RULE_1, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, preemphasis_ctrl_1stposttap_setting)
			</DEFINITION>
		</MACRO>
		<MACRO NAME="m_preemp_tap0_rule2" >
			<DEFINITION>
				db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_PRETAP_SETTINGS_RULE_2, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, preemphasis_ctrl_1stposttap_setting)
			</DEFINITION>
		</MACRO>
		<MACRO NAME="m_preemp_tap0_rule3" >
			<DEFINITION>
				db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_PRETAP_SETTINGS_RULE_3, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, preemphasis_ctrl_1stposttap_setting)
			</DEFINITION>
		</MACRO>
		<MACRO NAME="m_preemp_tap2_rule1" >
			<DEFINITION>
				db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_POSTTAP2_SETTINGS_RULE_1, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, preemphasis_ctrl_1stposttap_setting, preemphasis_ctrl_pretap_setting)
			</DEFINITION>
		</MACRO>
		<MACRO NAME="m_preemp_tap2_rule2" >
			<DEFINITION>
				db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_POSTTAP2_SETTINGS_RULE_2, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, preemphasis_ctrl_1stposttap_setting, preemphasis_ctrl_pretap_setting)
			</DEFINITION>
		</MACRO>
		<MACRO NAME="m_preemp_tap2_rule3" >
			<DEFINITION>
				db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_POSTTAP2_SETTINGS_RULE_3, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, vod_ctrl_setting, preemphasis_ctrl_1stposttap_setting, preemphasis_ctrl_pretap_setting)
			</DEFINITION>
		</MACRO>
    <MACRO NAME="m_rx_wiz_inclk_freq">
      <DEFINITION>
        db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_INPUT_CLOCK_FREQUENCY, m_device_part, RX_CDR, effective_data_rate, UNUSED, protocol, UNUSED, UNUSED, UNUSED, UNUSED, UNUSED, AUTO)
      </DEFINITION>
    </MACRO>
    <MACRO NAME="m_tx_wiz_inclk_freq">
      <DEFINITION>
        db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_INPUT_CLOCK_FREQUENCY, m_device_part, UNUSED, effective_data_rate, UNUSED, UNUSED, protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, AUTO)
      </DEFINITION>
    </MACRO>
    <MACRO NAME="m_rx_wiz_data_rate">
      <DEFINITION>
        db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_EFFECTIVE_DATA_RATE, m_device_part, RX_CDR, input_clock_frequency, protocol, AUTO)
      </DEFINITION>
    </MACRO>
    <MACRO NAME="m_tx_wiz_data_rate">
      <DEFINITION>
        db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_CLOCK_DIVIDER_EFFECTIVE_DATA_RATE, m_device_part, UNUSED, 0, protocol, protocol, m_protocol1, m_protocol2, m_protocol3, CMU, UNUSED, input_clock_frequency, 0, UNUSED, UNUSED, UNUSED, UNUSED, AUTO)
      </DEFINITION>
    </MACRO>
    <MACRO NAME="m_wiz_data_rate" >
      <DEFINITION>
        m_rx_only ? m_rx_wiz_data_rate : (m_tx_only ? m_tx_wiz_data_rate : (m_rx_wiz_data_rate intersection m_tx_wiz_data_rate))
      </DEFINITION>
    </MACRO>
  </MACROS>
	
	<PARAMETER_RULES>
    <!-- these parameters are half manual and half RBC-->
    <PARAMETER NAME="input_clock_frequency" >
      <FORCE_VALUE TO="m_rx_wiz_inclk_freq intersection m_rx_wiz_inclk_freq" WHEN="m_rx_only" />
      <FORCE_VALUE TO="m_tx_wiz_inclk_freq intersection m_tx_wiz_inclk_freq" WHEN="m_tx_only" />
      <FORCE_VALUE TO="m_rx_wiz_inclk_freq intersection m_tx_wiz_inclk_freq" WHEN="m_duplex" />
      <FORCE_VALUE TO="'124.416 MHz'" IF="m_sonet96" />
      <FORCE_RANGE TO="'148.35 MHz'|'296.7 MHz'" IF="m_sdi" />
      <FORCE_RANGE TO="'148.35 MHz'|'296.7 MHz'" IF="m_sdi_3g and (m_data_rate == 2967)" />
      <FORCE_RANGE TO="'148.5 MHz'|'297.0 MHz'" IF="m_sdi_3g and (m_data_rate == 2970)" />
      <FORCE_RANGE TO="'74.175 MHz'|'148.35 MHz'" IF="m_sdi_hd and (m_data_rate == 1483)" />
      <FORCE_RANGE TO="'74.25 MHz'|'148.5 MHz'" IF="m_sdi_hd and (m_data_rate == 1485)"/>
      <FORCE_VALUE TO="'100.0 MHz'" IF="mfam_family_cycloneiiigl and m_pcie" />
      <FORCE_VALUE TO="'62.5 MHz'|'125.0 MHz'" IF="mfam_family_cycloneiiigl and m_gige" />
    </PARAMETER>
    <PARAMETER NAME="reconfig_input_clock_frequency" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_INPUT_CLOCK_FREQUENCY, m_device_part, UNUSED, reconfig_base_data_rate, UNUSED, UNUSED, reconfig_protocol, UNUSED, UNUSED, UNUSED, UNUSED, gxb_analog_power)" />
      <FORCE_RANGE TO="'62.208 MHz'|'77.76 MHz'|'155.52 MHz'|'311.04 MHz'|'622.08 MHz'" IF="m_sonet12 || m_sonet(WIZ_DPRIO_PROTOCOL)" />
      <FORCE_RANGE TO="'77.76 MHz'|'155.52 MHz'|'311.04 MHz'|'622.08 MHz'" IF="m_sonet48(WIZ_DPRIO_PROTOCOL, WIZ_DPRIO_SUBPROTOCOL)" />
      <FORCE_VALUE TO="'124.416 MHz'" IF="m_sonet96(WIZ_DPRIO_PROTOCOL, WIZ_DPRIO_SUBPROTOCOL)" />
       <!-- <FORCE_RANGE TO="'62.5 MHz'|'125 MHz'" IF="m_gige(WIZ_DPRIO_PROTOCOL)" />-->
      <FORCE_VALUE TO="'100 MHz'" IF="m_pcie(WIZ_DPRIO_PROTOCOL)" />
      <FORCE_RANGE TO="'148.35 MHz'|'296.7 MHz'" IF="m_sdi_3g(WIZ_DPRIO_PROTOCOL, WIZ_DPRIO_SUBPROTOCOL) and (reconfig_base_data_rate == '2967 Mbps')" />
      <FORCE_RANGE TO="'148.5 MHz'|'297 MHz'" IF="m_sdi_3g(WIZ_DPRIO_PROTOCOL, WIZ_DPRIO_SUBPROTOCOL) and (reconfig_base_data_rate == '2970 Mbps')" />
      <FORCE_RANGE TO="'74.175 MHz'|'148.35 MHz'" IF="m_sdi_hd(WIZ_DPRIO_PROTOCOL, WIZ_DPRIO_SUBPROTOCOL) and (reconfig_base_data_rate == '1483.5 Mbps')" />
      <FORCE_RANGE TO="'74.25 MHz'|'148.5 MHz'" IF="m_sdi_hd(WIZ_DPRIO_PROTOCOL, WIZ_DPRIO_SUBPROTOCOL) and (reconfig_base_data_rate == '1485 Mbps')"/>
    </PARAMETER>
    <PARAMETER NAME="tx_pll1_input_clock_frequency" TYPE="STRING">
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_INPUT_CLOCK_FREQUENCY, m_device_part, UNUSED, tx_pll1_base_data_rate, UNUSED, UNUSED, tx_pll1_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
      <FORCE_RANGE TO="'62.208 MHz'|'77.76 MHz'|'155.52 MHz'|'311.04 MHz'|'622.08 MHz'" IF="m_sonet12 || m_sonet(WIZ_PLL1_PROTOCOL)" />
      <FORCE_RANGE TO="'77.76 MHz'|'155.52 MHz'|'311.04 MHz'|'622.08 MHz'" IF="m_sonet48(WIZ_PLL1_PROTOCOL, WIZ_PLL1_SUBPROTOCOL)" />
      <FORCE_VALUE TO="'124.416 MHz'" IF="m_sonet96(WIZ_PLL1_PROTOCOL, WIZ_PLL1_SUBPROTOCOL)" />
      <FORCE_RANGE TO="'62.5 MHz'|'125 MHz'" IF="m_gige(WIZ_PLL1_PROTOCOL)" />
      <FORCE_VALUE TO="'100 MHz'" IF="m_pcie(WIZ_PLL1_PROTOCOL)" />
      <FORCE_RANGE TO="'148.35 MHz'|'296.7 MHz'" IF="m_sdi_3g(WIZ_PLL1_PROTOCOL, WIZ_PLL1_SUBPROTOCOL) and (tx_pll1_base_data_rate == '2967 Mbps')" />
      <FORCE_RANGE TO="'148.5 MHz'|'297 MHz'" IF="m_sdi_3g(WIZ_PLL1_PROTOCOL, WIZ_PLL1_SUBPROTOCOL) and (tx_pll1_base_data_rate == '2970 Mbps')" />
      <FORCE_RANGE TO="'74.175 MHz'|'148.35 MHz'" IF="m_sdi_hd(WIZ_PLL1_PROTOCOL, WIZ_PLL1_SUBPROTOCOL) and (tx_pll1_base_data_rate == '1483.5 Mbps')" />
      <FORCE_RANGE TO="'74.25 MHz'|'148.5 MHz'" IF="m_sdi_hd(WIZ_PLL1_PROTOCOL, WIZ_PLL1_SUBPROTOCOL) and (tx_pll1_base_data_rate == '1485 Mbps')"/>
    </PARAMETER>
    <PARAMETER NAME="tx_pll2_input_clock_frequency" TYPE="STRING">
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_INPUT_CLOCK_FREQUENCY, m_device_part, UNUSED, tx_pll2_base_data_rate, UNUSED, UNUSED, tx_pll2_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
      <FORCE_RANGE TO="'62.208 MHz'|'77.76 MHz'|'155.52 MHz'|'311.04 MHz'|'622.08 MHz'" IF="m_sonet12 || m_sonet(WIZ_pll2_PROTOCOL)" />
      <FORCE_RANGE TO="'77.76 MHz'|'155.52 MHz'|'311.04 MHz'|'622.08 MHz'" IF="m_sonet48(WIZ_pll2_PROTOCOL, WIZ_pll2_SUBPROTOCOL)" />
      <FORCE_VALUE TO="'124.416 MHz'" IF="m_sonet96(WIZ_pll2_PROTOCOL, WIZ_pll2_SUBPROTOCOL)" />
      <FORCE_RANGE TO="'62.5 MHz'|'125 MHz'" IF="m_gige(WIZ_pll2_PROTOCOL)" />
      <FORCE_VALUE TO="'100 MHz'" IF="m_pcie(WIZ_pll2_PROTOCOL)" />
      <FORCE_RANGE TO="'148.35 MHz'|'296.7 MHz'" IF="m_sdi_3g(WIZ_pll2_PROTOCOL, WIZ_pll2_SUBPROTOCOL) and (tx_pll2_base_data_rate == '2967 Mbps')" />
      <FORCE_RANGE TO="'148.5 MHz'|'297 MHz'" IF="m_sdi_3g(WIZ_pll2_PROTOCOL, WIZ_pll2_SUBPROTOCOL) and (tx_pll2_base_data_rate == '2970 Mbps')" />
      <FORCE_RANGE TO="'74.175 MHz'|'148.35 MHz'" IF="m_sdi_hd(WIZ_pll2_PROTOCOL, WIZ_pll2_SUBPROTOCOL) and (tx_pll2_base_data_rate == '1483.5 Mbps')" />
      <FORCE_RANGE TO="'74.25 MHz'|'148.5 MHz'" IF="m_sdi_hd(WIZ_pll2_PROTOCOL, WIZ_pll2_SUBPROTOCOL) and (tx_pll2_base_data_rate == '1485 Mbps')"/>
    </PARAMETER>
    <PARAMETER NAME="tx_pll3_input_clock_frequency" TYPE="STRING">
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_INPUT_CLOCK_FREQUENCY, m_device_part, UNUSED, tx_pll3_base_data_rate, UNUSED, UNUSED, tx_pll3_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
      <FORCE_RANGE TO="'62.208 MHz'|'77.76 MHz'|'155.52 MHz'|'311.04 MHz'|'622.08 MHz'" IF="m_sonet12 || m_sonet(WIZ_pll3_PROTOCOL)" />
      <FORCE_RANGE TO="'77.76 MHz'|'155.52 MHz'|'311.04 MHz'|'622.08 MHz'" IF="m_sonet48(WIZ_pll3_PROTOCOL, WIZ_pll3_SUBPROTOCOL)" />
      <FORCE_VALUE TO="'124.416 MHz'" IF="m_sonet96(WIZ_pll3_PROTOCOL, WIZ_pll3_SUBPROTOCOL)" />
      <FORCE_RANGE TO="'62.5 MHz'|'125 MHz'" IF="m_gige(WIZ_pll3_PROTOCOL)" />
      <FORCE_VALUE TO="'100 MHz'" IF="m_pcie(WIZ_pll3_PROTOCOL)" />
      <FORCE_RANGE TO="'148.35 MHz'|'296.7 MHz'" IF="m_sdi_3g(WIZ_pll3_PROTOCOL, WIZ_pll3_SUBPROTOCOL) and (tx_pll3_base_data_rate == '2967 Mbps')" />
      <FORCE_RANGE TO="'148.5 MHz'|'297 MHz'" IF="m_sdi_3g(WIZ_pll3_PROTOCOL, WIZ_pll3_SUBPROTOCOL) and (tx_pll3_base_data_rate == '2970 Mbps')" />
      <FORCE_RANGE TO="'74.175 MHz'|'148.35 MHz'" IF="m_sdi_hd(WIZ_pll3_PROTOCOL, WIZ_pll3_SUBPROTOCOL) and (tx_pll3_base_data_rate == '1483.5 Mbps')" />
      <FORCE_RANGE TO="'74.25 MHz'|'148.5 MHz'" IF="m_sdi_hd(WIZ_pll3_PROTOCOL, WIZ_pll3_SUBPROTOCOL) and (tx_pll3_base_data_rate == '1485 Mbps')"/>
    </PARAMETER>
    <PARAMETER NAME="base_data_rate" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_BASE_DATA_RATE, m_device_part, UNUSED, input_clock_frequency, UNUSED, UNUSED, m_tx_clk_div_type, UNUSED, effective_data_rate, UNUSED, protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, AUTO)" />
      <FORCE_VALUE TO="effective_data_rate" IF="mfam_family_cycloneiiigl" />
    </PARAMETER>
    <PARAMETER NAME="pll_pfd_fb_mode" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_PFD_FB_SELECT, tx_pll_type, tx_pll_n_divider, tx_pll_m_divider, tx_pll_vco_post_scale_divider, UNUSED, tx_use_double_data_mode, m_deser_factor, protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol)" />
    </PARAMETER>
    <!-- advanced parameters -->
    <PARAMETER NAME="rx_cru_m_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_M, m_device_part, effective_data_rate, input_clock_frequency, rx_cru_n_divider, RX_CDR, UNUSED, protocol, UNUSED, UNUSED, UNUSED, UNUSED, UNUSED, AUTO)" />
    </PARAMETER>
    <PARAMETER NAME="rx_cru_n_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_N, m_device_part, effective_data_rate, input_clock_frequency, RX_CDR, UNUSED, protocol, UNUSED, UNUSED, UNUSED, UNUSED, UNUSED, AUTO)" />
    </PARAMETER>
    <PARAMETER NAME="rx_cru_vco_post_scale_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_VCO_POST_SCALE, m_device_part, effective_data_rate, rx_cru_m_divider, RX_CDR, UNUSED, protocol, UNUSED, UNUSED, UNUSED, UNUSED, UNUSED, AUTO)" />
    </PARAMETER>

    <PARAMETER NAME="tx_pll_m_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_M, m_device_part, m_base_data_rate_in_big_time, input_clock_frequency, tx_pll_n_divider, tx_pll_type, UNUSED, UNUSED, protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, AUTO)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll_n_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_N, m_device_part, m_base_data_rate_in_big_time, input_clock_frequency, tx_pll_type, UNUSED, UNUSED, protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, AUTO)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll_vco_post_scale_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_VCO_POST_SCALE, m_device_part, m_base_data_rate_in_big_time, tx_pll_m_divider, tx_pll_type, UNUSED, UNUSED, protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, AUTO)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll_clock_post_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_CLOCK_DIVIDER_PRE_DIVIDE_BY, m_device_part, m_clk_divider_type, effective_data_rate, 0, protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, m_base_data_rate_in_big_time, tx_pll_type, 0, UNUSED, UNUSED, UNUSED)" />
    </PARAMETER>

    <PARAMETER NAME="tx_reconfig_pll_m_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_M, m_device_part, reconfig_base_data_rate, reconfig_input_clock_frequency, tx_reconfig_pll_n_divider, CMU, UNUSED, UNUSED, reconfig_protocol, UNUSED, UNUSED, UNUSED, UNUSED, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_reconfig_pll_n_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_N, m_device_part, reconfig_base_data_rate, reconfig_input_clock_frequency, CMU, UNUSED, UNUSED, reconfig_protocol, UNUSED, UNUSED, UNUSED, UNUSED, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_reconfig_pll_vco_post_scale_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_VCO_POST_SCALE, m_device_part, reconfig_base_data_rate, tx_reconfig_pll_m_divider, CMU, UNUSED, UNUSED, reconfig_protocol, UNUSED, UNUSED, UNUSED, UNUSED, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_PLL_TYPE, m_device_part, m_base_data_rate_in_big_time, input_clock_frequency, UNUSED, UNUSED, m_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, m_clk_divider_type, effective_data_rate, INT_CMU_PLL_INCLK_SEL, AUTO)" /> 
    </PARAMETER>
    <PARAMETER NAME="tx_pll1_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_PLL_TYPE, m_device_part, tx_pll1_base_data_rate, tx_pll1_input_clock_frequency, UNUSED, UNUSED, tx_pll1_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, m_clk_divider_type, tx_pll1_base_data_rate, INT_CMU_PLL_INCLK_SEL, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll2_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_PLL_TYPE, m_device_part, tx_pll2_base_data_rate, tx_pll2_input_clock_frequency, UNUSED, UNUSED, tx_pll2_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, CENTRAL_ENHANCED, tx_pll2_base_data_rate, UNUSED, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll3_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_PLL_TYPE, m_device_part, tx_pll3_base_data_rate, tx_pll3_input_clock_frequency, UNUSED, UNUSED, tx_pll3_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, CENTRAL_ENHANCED, tx_pll3_base_data_rate, UNUSED, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="intended_device_speed_grade" >
			<FORCE_VALUE TO="db_rbc_tcl$get_device_speed_grades(INTENDED_DEVICE_FAMILY, intended_device_variant)" />
		</PARAMETER>
	    <PARAMETER NAME="intended_device_variant" TYPE="STRING" VALUE="Any">
		  <FORCE_VALUE TO="db_rbc_tcl$get_device_variants(INTENDED_DEVICE_FAMILY)" />
		</PARAMETER>
<!-- PMA controls -->
		<PARAMETER NAME="equalizer_dcgain_setting" TYPE="INTEGER">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_RX_PMA_EQ_DC_GAIN, INTENDED_DEVICE_FAMILY, m_channel_type) div 3" />
      <FORCE_RANGE TO="0|1|3" WHEN="mfam_family_cycloneiiigl" />
    </PARAMETER>
		<PARAMETER NAME="receiver_termination" CNX_TYPE="PRIVATE" TYPE="STRING" >
			<FORCE_VALUE REGEXP_SOURCE="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_RX_PMA_TERMINATION_SETTING, INTENDED_DEVICE_FAMILY, m_channel_type)" REGEXP_PATTERN="OCT ([0-9]+) Ohms" REGEXP_SUBSTITUTION="OCT_$1_Ohms" />
      <FORCE_VALUE TO="OCT_100_Ohms|OCT_150_Ohms" WHEN="mfam_family_cycloneiiigl" />      
		</PARAMETER>
		<PARAMETER NAME="transmitter_termination" CNX_TYPE="PRIVATE" TYPE="STRING" >
			<FORCE_VALUE REGEXP_SOURCE="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_TERMINATION_SETTING, INTENDED_DEVICE_FAMILY, m_channel_type, protocol, effective_data_rate)" REGEXP_PATTERN="OCT ([0-9]+) Ohms" REGEXP_SUBSTITUTION="OCT_$1_Ohms" />
      <FORCE_VALUE TO="OCT_100_Ohms|OCT_150_Ohms" WHEN="mfam_family_cycloneiiigl" />
    </PARAMETER>
		<PARAMETER NAME="rx_common_mode">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_RX_PMA_COMMON_MODE, protocol, m_channel_type)" />
      <FORCE_VALUE TO="'0.82v'" WHEN="mfam_family_cycloneiiigl" />
		</PARAMETER>
		<PARAMETER NAME="vod_ctrl_setting">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_VOD_SELECTION, INTENDED_DEVICE_FAMILY, m_wys_tx_termination, m_channel_type, protocol, effective_data_rate)" />
      <FORCE_RANGE MIN="0" MAX="7"  WHEN="mfam_family_cycloneiiigl" />
    </PARAMETER>
		<PARAMETER NAME="preemphasis_ctrl_1stposttap_setting">
			<FORCE_VALUE TO="m_preemp_tap1_rule1 intersection m_preemp_tap1_rule2 intersection m_preemp_tap1_rule3" />
      <FORCE_RANGE MIN="0" MAX="31" WHEN="mfam_family_cycloneiiigl" />
    </PARAMETER>
		<PARAMETER NAME="preemphasis_ctrl_pretap_setting">
			<FORCE_VALUE TO="m_preemp_tap0_rule1 intersection m_preemp_tap0_rule2 intersection m_preemp_tap0_rule3" />					
		</PARAMETER>
		<PARAMETER NAME="preemphasis_ctrl_2ndposttap_setting">
			<FORCE_VALUE TO="m_preemp_tap2_rule1 intersection m_preemp_tap2_rule2 intersection m_preemp_tap2_rule3" />					
		</PARAMETER>
		<PARAMETER NAME="preemphasis_ctrl_pretap_inv_setting">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_PRETAP_INVERT, INTENDED_DEVICE_FAMILY)" />					
		</PARAMETER>
		<PARAMETER NAME="preemphasis_ctrl_2ndposttap_inv_setting">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_POSTTAP2_INVERT, INTENDED_DEVICE_FAMILY)" />					
		</PARAMETER>
    <PARAMETER NAME="preemphasis_ctrl_2ndposttap_inv_setting">
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_PREEMP_POSTTAP2_INVERT, INTENDED_DEVICE_FAMILY)" />
    </PARAMETER>
    <PARAMETER NAME="rx_cru_bandwidth_type" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_RX_BANDWIDTH_TYPE, rx_cru_m_divider, rx_cru_vco_post_scale_divider, RX_CDR, input_clock_frequency, effective_data_rate, protocol)" />                       
    </PARAMETER>
    <PARAMETER NAME="tx_pll_bandwidth_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_TX_BANDWIDTH_TYPE, m_device_part, tx_pll_m_divider, tx_pll_vco_post_scale_divider, m_tx_pll_type, input_clock_frequency, UNUSED, effective_data_rate, protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol)" />
    </PARAMETER>
    <PARAMETER NAME="tx_reconfig_pll_bandwidth_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_TX_BANDWIDTH_TYPE, m_device_part, tx_reconfig_pll_m_divider, tx_reconfig_pll_vco_post_scale_divider, CMU, reconfig_input_clock_frequency, UNUSED, reconfig_protocol, UNUSED, UNUSED, UNUSED, UNUSED)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll1_bandwidth_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_TX_BANDWIDTH_TYPE, m_device_part, tx_pll1_m_divider, tx_pll1_vco_post_scale_divider, CMU, tx_pll1_input_clock_frequency, UNUSED, tx_pll1_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll2_bandwidth_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_TX_BANDWIDTH_TYPE, m_device_part, tx_pll2_m_divider, tx_pll2_vco_post_scale_divider, CMU, tx_pll2_input_clock_frequency, UNUSED, tx_pll2_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll3_bandwidth_type" TYPE="STRING" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_TX_BANDWIDTH_TYPE, m_device_part, tx_pll3_m_divider, tx_pll3_vco_post_scale_divider, CMU, tx_pll3_input_clock_frequency, UNUSED, tx_pll3_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll1_m_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_M, m_device_part, tx_pll1_base_data_rate, tx_pll1_input_clock_frequency, tx_pll1_n_divider, CMU, UNUSED, UNUSED, tx_pll1_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll1_n_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_N, m_device_part, tx_pll1_base_data_rate, tx_pll1_input_clock_frequency, CMU, UNUSED, UNUSED, tx_pll1_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll1_vco_post_scale_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_VCO_POST_SCALE, m_device_part, tx_pll1_base_data_rate, tx_pll1_m_divider, CMU, UNUSED, UNUSED, tx_pll1_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll2_m_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_M, m_device_part, tx_pll2_base_data_rate, tx_pll2_input_clock_frequency, tx_pll2_n_divider, CMU, UNUSED, UNUSED, tx_pll2_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll2_n_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_N, m_device_part, tx_pll2_base_data_rate, tx_pll2_input_clock_frequency, CMU, UNUSED, UNUSED, tx_pll2_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll2_vco_post_scale_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_VCO_POST_SCALE, m_device_part, tx_pll2_base_data_rate, tx_pll2_m_divider, CMU, UNUSED, UNUSED, tx_pll2_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll3_m_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_M, m_device_part, tx_pll3_base_data_rate, tx_pll3_input_clock_frequency, tx_pll3_n_divider, CMU, UNUSED, UNUSED, tx_pll3_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll3_n_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_N, m_device_part, tx_pll3_base_data_rate, tx_pll3_input_clock_frequency, CMU, UNUSED, UNUSED, tx_pll3_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_pll3_vco_post_scale_divider" ON_CONFLICT="USE_CALC_VAL"  TYPE="INTEGER" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TGX_HSSI_PLL_VCO_POST_SCALE, m_device_part, tx_pll3_base_data_rate, tx_pll1_m_divider, CMU, UNUSED, UNUSED, tx_pll3_protocol, protocol, tx_pll1_protocol, tx_pll2_protocol, tx_pll3_protocol, gxb_analog_power)" />
    </PARAMETER>
    <PARAMETER NAME="tx_slew_rate" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_SLEW_RATE, protocol, effective_data_rate)" />
    </PARAMETER>
    <PARAMETER NAME="rx_force_signal_detect" >
    <!--  <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_RX_PMA_FORCE_SIGNAL_DETECT, m_channel_type)" /> -->
    </PARAMETER>
    <!-- disabled PMA controls
		<PARAMETER NAME="tx_common_mode">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_COMMON_MODE, protocol, m_tx_clkin_select)" />	
		</PARAMETER>
		<PARAMETER NAME="tx_analog_power">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_TX_PMA_ANALOG_POWER)" />
		</PARAMETER> -->

<!-- PCS controls -->
	<!--<PARAMETER NAME="rx_datapath_low_latency_mode" >
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_DATAPATH_LOW_LATENCY_MODE, protocol)" /> 
		</PARAMETER>
		<PARAMETER NAME="tx_datapath_low_latency_mode" >
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TXPCS_DATAPATH_LOW_LATENCY_MODE, protocol)" />	
		</PARAMETER> -->
		<PARAMETER NAME="tx_enable_bit_reversal">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TXPCS_ENABLE_BIT_REVERSAL, protocol)" />
		</PARAMETER>
		<PARAMETER NAME="rx_enable_bit_reversal">
		<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_ENABLE_BIT_REVERSAL, protocol,rx_8b_10b_mode)" />
		</PARAMETER>
    <PARAMETER NAME="rx_signal_detect_threshold" TYPE="INTEGER">
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_RX_PMA_SIGNAL_DETECT_HYSTERESIS, m_protocol, effective_data_rate, rx_8b_10b_mode)" />
    </PARAMETER>
    <PARAMETER NAME="rx_signal_detect_valid_threshold" TYPE="INTEGER">
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_RX_PMA_SIGNAL_DETECT_HYSTERESIS_VALID_THRESHOLD, m_protocol, effective_data_rate, rx_8b_10b_mode)" />
    </PARAMETER>
    <PARAMETER NAME="rx_signal_detect_loss_threshold" TYPE="INTEGER">
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_RX_PMA_SIGNAL_DETECT_LOSS_THRESHOLD, m_protocol, effective_data_rate, rx_8b_10b_mode)" /> 
    </PARAMETER>
    <PARAMETER NAME="rx_adaptive_equalization_mode" >
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_RX_PMA_ADAPTIVE_EQUALIZATION_MODE, INTENDED_DEVICE_FAMILY, m_device_part, m_channel_type, protocol, effective_data_rate, rx_8b_10b_mode)" /> 
    </PARAMETER> 

    <!--		<PARAMETER NAME="rx_run_length_enable">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_RUN_LENGTH_ENABLE, protocol, rx_use_deserializer_double_data_mode)" /> 
		</PARAMETER>
		<PARAMETER NAME="rx_run_length">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_CGA_UINT_RUN_LENGTH, protocol, rx_run_length_enable, rx_use_deserializer_double_data_mode, m_deser_factor)" /> 
		</PARAMETER>
		
 <!--<PARAMETER NAME="gxb_analog_power">
      <FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, CHECK_CMU_VCCEH_VOLTAG, INTENDED_DEVICE_FAMILY, m_inclock_period, m_m_divider, m_n_divider, m_inclock_period, m_m_divider, m_n_divider, m_inclock_period, m_m_divider, m_n_divider, m_inclock_period, m_m_divider, m_n_divider, m_inclock_period, m_m_divider, m_n_divider, m_inclock_period, m_m_divider, m_n_divider, m_inclock_period, m_m_divider, m_n_divider, m_inclock_period, m_m_divider, m_n_divider)" />
    </PARAMETER>
	<!-- disabled PCS controls
		<PARAMETER NAME="rx_align_pattern_length">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_WA_ALIGN_PATTERN_LENGTH, protocol, rx_datapath_low_latency_mode, rx_use_align_state_machine, rx_bitslip_enable, rx_8b_10b_mode, rx_channel_width, m_deser_factor, rx_use_deserializer_double_data_mode)" />		
		</PARAMETER>
		<PARAMETER NAME="rx_8b_10b_mode" >
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_8B10B_MODE, protocol, rx_datapath_low_latency_mode, rx_channel_width, m_deser_factor, rx_use_deserializer_double_data_mode)" />	
		</PARAMETER>
		<PARAMETER NAME="tx_8b_10b_mode" >
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, TXPCS_8B10B_MODE, protocol, tx_datapath_low_latency_mode, tx_channel_width, m_deser_factor, tx_use_serializer_double_data_mode)" />		
		</PARAMETER>
		<PARAMETER NAME="wys_rx_rate_match_fifo_mode" CNX_TYPE="PRIVATE" TYPE="STRING" >
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_RATE_MATCH_ENABLE, protocol, rx_datapath_low_latency_mode, rx_bitslip_enable, rx_use_align_state_machine, rx_8b_10b_mode, m_deser_factor, rx_use_deserializer_double_data_mode)" /> 
		</PARAMETER>
		<PARAMETER NAME="wys_rx_byte_ordering_mode" CNX_TYPE="PRIVATE" TYPE="STRING">
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_BYTE_ORDER_MODE, protocol, rx_datapath_low_latency_mode, rx_bitslip_enable, rx_use_align_state_machine, rx_align_pattern_length, rx_rate_match_fifo_mode, rx_use_double_data_mode, rx_8b_10b_mode, m_deser_factor, rx_use_deserializer_double_data_mode)" /> 
		</PARAMETER>
		<PARAMETER NAME="rx_byte_order_pld_ctrl_enable" >
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_BYTE_ORDER_PLD_CTRL_ENABLE, protocol, rx_byte_ordering_mode)" />
		</PARAMETER>
		<PARAMETER NAME="rx_bitslip_enable" >
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_WA_BITSLIP_ENABLE, protocol, rx_datapath_low_latency_mode, rx_use_align_state_machine, rx_use_deserializer_double_data_mode, m_deser_factor)" />
		</PARAMETER>
		<PARAMETER NAME="rx_use_align_state_machine" >
			<FORCE_VALUE TO="db_rbc_tcl$rbc_tcl_mega_rules_validator_interface(advanced_hssi_legality, TGX_HSSI_CONFIG, RXPCS_WA_SYNC_SM_ENABLE, protocol, rx_datapath_low_latency_mode,  rx_8b_10b_mode, rx_channel_width, m_deser_factor, rx_use_deserializer_double_data_mode)" />
		</PARAMETER> -->		
 	</PARAMETER_RULES>
</ROOT>
